{"version":3,"sources":["utils/userLoginContext.ts","components/searchPage/components/searchBar/SearchBar.tsx","requests/headers.ts","requests/get/userId/userId.ts","components/searchPage/SearchPage.tsx","requests/get/userFollows/userFollows.ts","components/profilePage/components/followedList/FollowedList.tsx","components/profilePage/ProfilePage.tsx","components/App.tsx","index.tsx"],"names":["userLoginContext","createContext","SearchBar","useContext","setUserLogin","onChange","e","target","value","type","className","placeholder","headers","Headers","process","Authorization","userId","userLogin","a","fetch","request","json","console","log","SearchPage","USER_LOGIN","useParams","useState","toProfilePage","setToProfilePage","searchMessage","setSearchMessage","getUserId","res","data","id","useEffect","onSubmit","event","preventDefault","to","icon","userFollows","FollowedList","follows","map","follow","to_name","ProfilePage","userObject","setUserObject","toSearchPage","setToSearchPage","getUserData","userData","fetchUserObject","App","Provider","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1de51649.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ntype overviewContextProps = [\n  userLogin: string,\n  setOverviewBox: React.Dispatch<React.SetStateAction<any>>\n];\n\nexport const userLoginContext = createContext<overviewContextProps>([\"\", () => { }]);","import { useContext } from 'react';\nimport { userLoginContext } from '../../../../utils/userLoginContext';\n\nexport const SearchBar = () => {\n  const [, setUserLogin] = useContext(userLoginContext);\n\n  return (\n    <input\n      onChange={(e) => setUserLogin(e.target.value)}\n      type='text'\n      className='SearchBar'\n      placeholder='Search'\n    ></input>\n  );\n};\n","const clientId = process.env.REACT_APP_CLIENT_ID;\nconst oauthCode = process.env.REACT_APP_OAUTH_CODE;\nexport const headers = new Headers({\n  'Client-ID': clientId!,\n  Authorization: `Bearer ${oauthCode}`,\n});","//https://discuss.dev.twitch.tv/t/getting-user-ids/13806\nimport { userIdType } from './userId.type';\nimport { headers } from '../../headers';\n\nlet url = 'https://api.twitch.tv/helix/users?login=';\nexport const userId = async (\n  userLogin: string\n): Promise<userIdType | undefined> => {\n  try {\n    const request = await fetch(url + userLogin, { headers: headers });\n    return await request.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { SearchBar } from './components/searchBar/SearchBar';\nimport { Icon } from '@iconify/react';\nimport { userLoginContext } from '../../utils/userLoginContext';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { userId } from '../../requests/get/userId/userId';\n\ninterface ParamTypes {\n  USER_LOGIN?: string;\n}\nexport const SearchPage = () => {\n  const { USER_LOGIN } = useParams<ParamTypes>();\n  const [userLogin] = useContext(userLoginContext);\n  const [toProfilePage, setToProfilePage] = useState(false);\n  const [searchMessage, setSearchMessage] = useState('');\n  const getUserId = async (userLogin: string) => {\n    const res = await userId(userLogin);\n    const id = res?.data[0]?.id;\n    if (!id) {\n      return false;\n    }\n    return res?.data[0]?.id;\n  };\n\n  useEffect(() => {\n    if (USER_LOGIN) {\n      setSearchMessage(`${USER_LOGIN} was not found`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setSearchMessage(`searching for ${userLogin}`);\n    const id = await getUserId(userLogin);\n    if (!id) {\n      setSearchMessage(`${userLogin} was not found`);\n    } else {\n      setToProfilePage(true);\n    }\n  };\n  if (toProfilePage) {\n    return <Redirect to={`${process.env.PUBLIC_URL}/${userLogin}`} />;\n  }\n  return (\n    <div className='SearchPage'>\n      <form onSubmit={onSubmit} className='searchField'>\n        <Icon icon='logos:twitch' className='searchField__icon' />\n        <div className='searchField__text'>\n          <p>Search for twitch user</p>\n        </div>\n        <SearchBar />\n        {searchMessage}\n      </form>\n    </div>\n  );\n};\n","//https://dev.twitch.tv/docs/api/reference/#get-users-follows\nimport { userFollowsType } from './userFollows.type';\nimport { headers } from '../../headers';\n\nlet url = 'https://api.twitch.tv/helix/users/follows?first=10&from_id=';\nexport const userFollows = async (\n  userId: string\n): Promise<userFollowsType | undefined> => {\n  console.log(process.env.REACT_APP_OAUTH_CODE);\n  try {\n    const request = await fetch(url + userId, { headers: headers });\n    return await request.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from 'react';\nimport { follow } from '../../../../requests/get/userFollows/userFollows.type';\n\ninterface Props {\n  follows: follow[];\n}\n\nexport const FollowedList: React.FC<Props> = ({ follows }) => {\n  return <div>{follows.map((follow: follow) => follow.to_name)}</div>;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userFollows } from '../../requests/get/userFollows/userFollows';\nimport { userFollowsType } from '../../requests/get/userFollows/userFollows.type';\nimport { userId } from '../../requests/get/userId/userId';\nimport { FollowedList } from './components/followedList/FollowedList';\nimport { Redirect } from 'react-router-dom';\n\ninterface ParamTypes {\n  USER_LOGIN: string;\n}\nexport const ProfilePage = () => {\n  const { USER_LOGIN } = useParams<ParamTypes>();\n  const [userObject, setUserObject] = useState<userFollowsType>();\n  const [toSearchPage, setToSearchPage] = useState(false);\n  const getUserId = async (userLogin: string) => {\n    const res = await userId(userLogin);\n    const id = res?.data[0]?.id;\n    if (!id) {\n      return false;\n    }\n    return res?.data[0].id;\n  };\n  const getUserData = async (userId: string) => {\n    const userData = await userFollows(userId);\n    return userData;\n  };\n  useEffect(() => {\n    const fetchUserObject = async () => {\n      const userId = await getUserId(USER_LOGIN);\n      if (!userId) {\n        setToSearchPage(true);\n      } else {\n        setUserObject(await getUserData(userId));\n      }\n    };\n    fetchUserObject();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (toSearchPage) {\n    console.log(USER_LOGIN);\n    return <Redirect to={`${process.env.PUBLIC_URL}/error/${USER_LOGIN}`} />;\n  }\n  return (\n    <div className='profilePage'>\n      {userObject?.data && <FollowedList follows={userObject.data} />}\n    </div>\n  );\n};\n","import { SearchPage } from './searchPage/SearchPage';\nimport { ProfilePage } from './profilePage/ProfilePage';\nimport { userLoginContext } from '../utils/userLoginContext';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nexport const App = () => {\n  const [userLogin, setUserLogin] = useState('');\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <userLoginContext.Provider value={[userLogin, setUserLogin]}>\n            <Route\n              path={[\n                `${process.env.PUBLIC_URL}/`,\n                `${process.env.PUBLIC_URL}/error/:USER_LOGIN`,\n              ]}\n              exact\n            >\n              <SearchPage />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/:USER_LOGIN`} exact>\n              <ProfilePage />\n            </Route>\n          </userLoginContext.Provider>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}